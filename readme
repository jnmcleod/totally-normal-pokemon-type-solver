This program should be run using the provided Makefile, due to its atypical nature.  Also "make clean" will remove the error logs generated

This is a program that takes in two pokemon types and gives their type advantage

It was written as an assignment to create the most deliberately terrible program that still worked.  Despite violating every rule of good coding, it is able to correctly determine type advantages for all possible inputs, including determining if invalid input was provided

It is written in C++, Java and Python.  The main C++ driver first unpacks the c++, python and java code from sourcecode, compiles the java and c++, and then runs the java part of the program.

The Java code reads the two pokemon types from the user, and then calls the newly compiled C++ to determine which of 15 new python files to run, which then determines the actual type advantage

Finally, the Java code exits gracefully via segfault (which was actually a lot harder to achieve than I expected; Java takes its safety seriously)

As a final note, the Java code is also technically an infinite loop of spaghetti code, as the classes are continuously creating new versions of each other, but fortunately we don't need to worry about that on account of the aforementioned hard crash.
